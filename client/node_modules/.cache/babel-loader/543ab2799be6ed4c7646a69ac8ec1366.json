{"ast":null,"code":"import _slicedToArray from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,Text,UnorderedList}from\"@chakra-ui/react\";import ConflictAccordion from\"./ConflictAccordion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ConflictModal=function ConflictModal(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,details=_ref.details;var summary=\"Below, there \".concat(details.size===1?\"is \".concat(details.size,\" song that needs to be\"):\"are \".concat(details.size,\" songs that need to be\"),\"  resolved. Each song title and the potential clean versions and linked below. Click on each one to decide whether or not to include them in your playlist\");return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{p:6,children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Resolve the following conflicts \"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsx(Text,{pb:5,children:details.size===0?\"All conflicts have been resolved :)\":summary}),details&&/*#__PURE__*/_jsx(UnorderedList,{mt:4,children:Array.from(details.entries()).map(function(entry,index){var _entry=_slicedToArray(entry,2),key=_entry[0],value=_entry[1];return/*#__PURE__*/_jsx(ConflictAccordion,{mainSong:key,possibleSongs:value,allSongs:details},index);})})]}),/*#__PURE__*/_jsx(ModalFooter,{})]})]});};","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/ConflictModal.jsx"],"names":["Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","UnorderedList","ConflictAccordion","ConflictModal","isOpen","onClose","details","summary","size","Array","from","entries","map","entry","index","key","value"],"mappings":"kIAAA,OACEA,KADF,CAEEC,SAFF,CAGEC,gBAHF,CAIEC,YAJF,CAKEC,WALF,CAMEC,WANF,CAOEC,YAPF,CAQEC,IARF,CASEC,aATF,KAUO,kBAVP,CAWA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,C,wFAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkC,IAA/BC,CAAAA,MAA+B,MAA/BA,MAA+B,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CAC7D,GAAMC,CAAAA,OAAO,wBACXD,OAAO,CAACE,IAAR,GAAiB,CAAjB,cACUF,OAAO,CAACE,IADlB,yCAEWF,OAAO,CAACE,IAFnB,0BADW,8JAAb,CAMA,mBACE,MAAC,KAAD,EAAO,MAAM,CAAEJ,MAAf,CAAuB,OAAO,CAAEC,OAAhC,wBACE,KAAC,YAAD,IADF,cAEE,MAAC,YAAD,EAAc,CAAC,CAAE,CAAjB,wBACE,KAAC,WAAD,+CADF,cAEE,KAAC,gBAAD,IAFF,cAGE,MAAC,SAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAV,UACGC,OAAO,CAACE,IAAR,GAAiB,CAAjB,CACG,qCADH,CAEGD,OAHN,EADF,CAMGD,OAAO,eACN,KAAC,aAAD,EAAe,EAAE,CAAE,CAAnB,UACGG,KAAK,CAACC,IAAN,CAAWJ,OAAO,CAACK,OAAR,EAAX,EAA8BC,GAA9B,CAAkC,SAACC,KAAD,CAAQC,KAAR,CAAkB,CACnD,0BAAqBD,KAArB,IAAOE,GAAP,WAAYC,KAAZ,WACA,mBACE,KAAC,iBAAD,EAEE,QAAQ,CAAED,GAFZ,CAGE,aAAa,CAAEC,KAHjB,CAIE,QAAQ,CAAEV,OAJZ,EACOQ,KADP,CADF,CAQD,CAVA,CADH,EAPJ,GAHF,cAyBE,KAAC,WAAD,IAzBF,GAFF,GADF,CAgCD,CAvCM","sourcesContent":["import {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport ConflictAccordion from \"./ConflictAccordion\";\n\nexport const ConflictModal = ({ isOpen, onClose, details }) => {\n  const summary = `Below, there ${\n    details.size === 1\n      ? `is ${details.size} song that needs to be`\n      : `are ${details.size} songs that need to be`\n  }  resolved. Each song title and the potential clean versions and linked below. Click on each one to decide whether or not to include them in your playlist`;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent p={6}>\n        <ModalHeader>Resolve the following conflicts </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text pb={5}>\n            {details.size === 0\n              ? \"All conflicts have been resolved :)\"\n              : summary}\n          </Text>\n          {details && (\n            <UnorderedList mt={4}>\n              {Array.from(details.entries()).map((entry, index) => {\n                const [key, value] = entry;\n                return (\n                  <ConflictAccordion\n                    key={index}\n                    mainSong={key}\n                    possibleSongs={value}\n                    allSongs={details}\n                  />\n                );\n              })}\n            </UnorderedList>\n          )}\n        </ModalBody>\n        <ModalFooter />\n      </ModalContent>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
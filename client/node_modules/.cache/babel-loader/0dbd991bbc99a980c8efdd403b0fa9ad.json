{"ast":null,"code":"var _jsxFileName = \"/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/CustomTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport { Table, Thead, Tbody, Tr, Th, Td, Flex, IconButton, Text, Tooltip, VStack, RadioGroup } from \"@chakra-ui/react\";\nimport { ArrowRightIcon, ArrowLeftIcon, ChevronRightIcon, ChevronLeftIcon } from \"@chakra-ui/icons\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomTable(_ref) {\n  _s();\n\n  let {\n    columns,\n    data,\n    hasRadio\n  } = _ref;\n  const {\n    checkedPlaylist,\n    setCheckedPlaylist,\n    setCleanedPlaylistID\n  } = useGlobalState();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: {\n      pageIndex\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, usePagination);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    h: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      h: \"100%\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: headerGroups.map(headerGroup => {\n          return /*#__PURE__*/_jsxDEV(Tr, { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => {\n              return /*#__PURE__*/_jsxDEV(Th, { ...column.getHeaderProps(),\n                children: column.render(\"Header\")\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this);\n            })\n          }, headerGroup === null || headerGroup === void 0 ? void 0 : headerGroup.headers[0].id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return hasRadio ? /*#__PURE__*/_jsxDEV(RadioGroup, {\n            onChange: value => {\n              setCheckedPlaylist(value);\n              setCleanedPlaylistID(\"\");\n            },\n            value: checkedPlaylist,\n            as: Tr,\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(Td, { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, cell.row.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Tr, {\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(Td, { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, cell.row.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      m: 4,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"First Page\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => gotoPage(0),\n            isDisabled: !canPreviousPage,\n            icon: /*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n              h: 3,\n              w: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this),\n            mr: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Previous Page\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: previousPage,\n            isDisabled: !canPreviousPage,\n            icon: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n              h: 6,\n              w: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          flexShrink: \"0\",\n          mr: 8,\n          children: [\"Page\", \" \", /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            as: \"span\",\n            children: pageIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), \" \", \"of\", \" \", /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            as: \"span\",\n            children: pageOptions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Next Page\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: nextPage,\n            isDisabled: !canNextPage,\n            icon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n              h: 6,\n              w: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Last Page\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => gotoPage(pageCount - 1),\n            isDisabled: !canNextPage,\n            icon: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n              h: 3,\n              w: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this),\n            ml: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomTable, \"TjA/izA8dNyiTS7xX/wBaB9aANU=\", false, function () {\n  return [useGlobalState, useTable];\n});\n\n_c = CustomTable;\nexport default CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/CustomTable.jsx"],"names":["React","useTable","usePagination","Table","Thead","Tbody","Tr","Th","Td","Flex","IconButton","Text","Tooltip","VStack","RadioGroup","ArrowRightIcon","ArrowLeftIcon","ChevronRightIcon","ChevronLeftIcon","useGlobalState","CustomTable","columns","data","hasRadio","checkedPlaylist","setCheckedPlaylist","setCleanedPlaylistID","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","state","pageIndex","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","id","row","value","getRowProps","cells","cell","getCellProps","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Flex,\n  IconButton,\n  Text,\n  Tooltip,\n  VStack,\n  RadioGroup,\n} from \"@chakra-ui/react\";\nimport {\n  ArrowRightIcon,\n  ArrowLeftIcon,\n  ChevronRightIcon,\n  ChevronLeftIcon,\n} from \"@chakra-ui/icons\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\n\nfunction CustomTable({ columns, data, hasRadio }) {\n  const { checkedPlaylist, setCheckedPlaylist, setCleanedPlaylistID } =\n    useGlobalState();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    usePagination\n  );\n\n  return (\n    <VStack h=\"100%\">\n      <Table h=\"100%\" {...getTableProps()}>\n        <Thead>\n          {headerGroups.map((headerGroup) => {\n            return (\n              <Tr\n                key={headerGroup?.headers[0].id}\n                {...headerGroup.getHeaderGroupProps()}\n              >\n                {headerGroup.headers.map((column) => {\n                  return (\n                    <Th key={column.id} {...column.getHeaderProps()}>\n                      {column.render(\"Header\")}\n                    </Th>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n        </Thead>\n        <Tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return hasRadio ? (\n              <RadioGroup\n                key={row.id}\n                onChange={(value) => {\n                  setCheckedPlaylist(value);\n                  setCleanedPlaylistID(\"\");\n                }}\n                value={checkedPlaylist}\n                as={Tr}\n                {...row.getRowProps()}\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <Td key={cell.row.id} {...cell.getCellProps()}>\n                      {cell.render(\"Cell\")}\n                    </Td>\n                  );\n                })}\n              </RadioGroup>\n            ) : (\n              <Tr key={row.id}>\n                {row.cells.map((cell) => {\n                  return (\n                    <Td key={cell.row.id} {...cell.getCellProps()}>\n                      {cell.render(\"Cell\")}\n                    </Td>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n      <Flex justifyContent=\"space-between\" m={4} alignItems=\"center\">\n        <Flex>\n          <Tooltip label=\"First Page\">\n            <IconButton\n              onClick={() => gotoPage(0)}\n              isDisabled={!canPreviousPage}\n              icon={<ArrowLeftIcon h={3} w={3} />}\n              mr={4}\n            />\n          </Tooltip>\n          <Tooltip label=\"Previous Page\">\n            <IconButton\n              onClick={previousPage}\n              isDisabled={!canPreviousPage}\n              icon={<ChevronLeftIcon h={6} w={6} />}\n            />\n          </Tooltip>\n        </Flex>\n\n        <Flex alignItems=\"center\">\n          <Text flexShrink=\"0\" mr={8}>\n            Page{\" \"}\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageIndex + 1}\n            </Text>{\" \"}\n            of{\" \"}\n            <Text fontWeight=\"bold\" as=\"span\">\n              {pageOptions.length}\n            </Text>\n          </Text>\n        </Flex>\n\n        <Flex>\n          <Tooltip label=\"Next Page\">\n            <IconButton\n              onClick={nextPage}\n              isDisabled={!canNextPage}\n              icon={<ChevronRightIcon h={6} w={6} />}\n            />\n          </Tooltip>\n          <Tooltip label=\"Last Page\">\n            <IconButton\n              onClick={() => gotoPage(pageCount - 1)}\n              isDisabled={!canNextPage}\n              icon={<ArrowRightIcon h={3} w={3} />}\n              ml={4}\n            />\n          </Tooltip>\n        </Flex>\n      </Flex>\n    </VStack>\n  );\n}\n\nexport default CustomTable;\n"]},"metadata":{},"sourceType":"module"}
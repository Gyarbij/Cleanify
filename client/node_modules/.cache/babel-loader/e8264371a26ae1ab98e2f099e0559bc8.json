{"ast":null,"code":"import _slicedToArray from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _createForOfIteratorHelper from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/regenerator/index.js\";import{AddIcon,ExternalLinkIcon}from\"@chakra-ui/icons\";import{Box,Flex,IconButton,Link,ListItem,Text,Tooltip,useToast}from\"@chakra-ui/react\";import React from\"react\";import{useGlobalState}from\"../../../contexts/GlobalContext\";import{addTracksToPlaylist}from\"../../../utils/api\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SongListItem=function SongListItem(_ref){var allSongs=_ref.allSongs,songTitle=_ref.songTitle,songLink=_ref.songLink,songURI=_ref.songURI,ogSongTitle=_ref.ogSongTitle;var _useGlobalState=useGlobalState(),cleanedPlaylistID=_useGlobalState.cleanedPlaylistID,setSongsToResolve=_useGlobalState.setSongsToResolve,songsToResolve=_useGlobalState.songsToResolve;var toast=useToast();var handleAddToPlaylist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(songURI){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return addTracksToPlaylist(cleanedPlaylistID,[songURI]);case 2:response=_context.sent;if(!(response instanceof Error)){_context.next=6;break;}toast({title:\"Error adding song to playlist\",position:\"top-right\",status:\"error\",duration:5000,isClosable:true});return _context.abrupt(\"return\");case 6:toast({title:\"Added song to playlist\\\"\",position:\"top-right\",status:\"success\",duration:2000,isClosable:true});handleRemoveItemFromList();case 8:case\"end\":return _context.stop();}}},_callee);}));return function handleAddToPlaylist(_x){return _ref2.apply(this,arguments);};}();var handleRemoveItemFromList=function handleRemoveItemFromList(){var remaining=new Map();var _iterator=_createForOfIteratorHelper(songsToResolve),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),key=_step$value[0],value=_step$value[1];if(key!==ogSongTitle)remaining.set(key,value);}}catch(err){_iterator.e(err);}finally{_iterator.f();}setSongsToResolve(remaining);// TODO: Update summary view\n};return/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsxs(Flex,{direction:\"col\",children:[/*#__PURE__*/_jsx(Text,{children:songTitle}),/*#__PURE__*/_jsxs(Box,{minW:\"40px\",ml:\"auto\",mr:0,mb:2,children:[/*#__PURE__*/_jsx(Tooltip,{hasArrow:true,label:\"Add song to playlist\",fontSize:\"md\",children:/*#__PURE__*/_jsx(IconButton,{ml:3,minW:\"25px\",w:\"25px\",h:\"25px\",icon:/*#__PURE__*/_jsx(AddIcon,{h:3,w:3}),colorScheme:\"green\",onClick:function onClick(){return handleAddToPlaylist(songURI);},children:\"+\"})}),/*#__PURE__*/_jsx(Tooltip,{hasArrow:true,label:\"View song in Spotify\",fontSize:\"md\",children:/*#__PURE__*/_jsx(Link,{isExternal:true,href:songLink,children:/*#__PURE__*/_jsx(IconButton,{ml:3,minW:\"25px\",w:\"25px\",h:\"25px\",colorScheme:\"teal\",icon:/*#__PURE__*/_jsx(ExternalLinkIcon,{h:3,w:3})})})})]})]})});};export default SongListItem;","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/SongListItem.jsx"],"names":["AddIcon","ExternalLinkIcon","Box","Flex","IconButton","Link","ListItem","Text","Tooltip","useToast","React","useGlobalState","addTracksToPlaylist","SongListItem","allSongs","songTitle","songLink","songURI","ogSongTitle","cleanedPlaylistID","setSongsToResolve","songsToResolve","toast","handleAddToPlaylist","response","Error","title","position","status","duration","isClosable","handleRemoveItemFromList","remaining","Map","key","value","set"],"mappings":"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","sourcesContent":["import { AddIcon, ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Link,\n  ListItem,\n  Text,\n  Tooltip,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useGlobalState } from \"../../../contexts/GlobalContext\";\nimport { addTracksToPlaylist } from \"../../../utils/api\";\nconst SongListItem = ({\n  allSongs,\n  songTitle,\n  songLink,\n  songURI,\n  ogSongTitle,\n}) => {\n  const { cleanedPlaylistID, setSongsToResolve, songsToResolve } =\n    useGlobalState();\n  const toast = useToast();\n\n  const handleAddToPlaylist = async (songURI) => {\n    const response = await addTracksToPlaylist(cleanedPlaylistID, [songURI]);\n\n    if (response instanceof Error) {\n      toast({\n        title: `Error adding song to playlist`,\n        position: \"top-right\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n\n      return;\n    }\n    toast({\n      title: `Added song to playlist\"`,\n      position: \"top-right\",\n      status: \"success\",\n      duration: 2000,\n      isClosable: true,\n    });\n    handleRemoveItemFromList();\n  };\n\n  const handleRemoveItemFromList = () => {\n    const remaining = new Map();\n    for (let [key, value] of songsToResolve) {\n      if (key !== ogSongTitle) remaining.set(key, value);\n    }\n    setSongsToResolve(remaining);\n    // TODO: Update summary view\n  };\n\n  return (\n    <ListItem>\n      <Flex direction=\"col\">\n        <Text>{songTitle}</Text>\n        <Box minW=\"40px\" ml=\"auto\" mr={0} mb={2}>\n          <Tooltip hasArrow label=\"Add song to playlist\" fontSize=\"md\">\n            <IconButton\n              ml={3}\n              minW=\"25px\"\n              w=\"25px\"\n              h=\"25px\"\n              icon={<AddIcon h={3} w={3} />}\n              colorScheme=\"green\"\n              onClick={() => handleAddToPlaylist(songURI)}\n            >\n              +\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip hasArrow label=\"View song in Spotify\" fontSize=\"md\">\n            <Link isExternal href={songLink}>\n              <IconButton\n                ml={3}\n                minW=\"25px\"\n                w=\"25px\"\n                h=\"25px\"\n                colorScheme=\"teal\"\n                icon={<ExternalLinkIcon h={3} w={3} />}\n              />\n            </Link>\n          </Tooltip>\n        </Box>\n      </Flex>\n    </ListItem>\n  );\n};\n\nexport default SongListItem;\n"]},"metadata":{},"sourceType":"module"}
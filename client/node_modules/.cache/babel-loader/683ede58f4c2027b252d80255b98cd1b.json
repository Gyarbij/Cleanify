{"ast":null,"code":"var _jsxFileName = \"/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/CleanSongTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\nimport { getTracks } from \"../../utils/api\";\nimport CustomTable from \"./CustomTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CleanSongTable = _ref => {\n  _s();\n\n  let {\n    title\n  } = _ref;\n  const {\n    cleanedPlaylistID\n  } = useGlobalState();\n  const [cleanedTracks, setCleanedTracks] = useState();\n  useEffect(() => {\n    const getCleanedTracks = async () => {\n      setCleanedTracks(await getTracks(cleanedPlaylistID));\n    };\n\n    getCleanedTracks();\n  }, [cleanedPlaylistID]);\n  const columns = useMemo(() => [{\n    Header: title,\n    accessor: \"name\"\n  }], [title]);\n  const data = [];\n  cleanedTracks && cleanedTracks.items.map(t => data.push({\n    name: t.track.name\n  }));\n  return /*#__PURE__*/_jsxDEV(CustomTable, {\n    hasRadio: false,\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CleanSongTable, \"39eMZo7UeVpxSkHF5JO6CxRANPw=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = CleanSongTable;\nexport default CleanSongTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CleanSongTable\");","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/CleanSongTable.jsx"],"names":["useEffect","useMemo","useState","useGlobalState","getTracks","CustomTable","CleanSongTable","title","cleanedPlaylistID","cleanedTracks","setCleanedTracks","getCleanedTracks","columns","Header","accessor","data","items","map","t","push","name","track"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,cAAc,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAwBL,cAAc,EAA5C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,EAAlD;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,gBAAgB,GAAG,YAAY;AACnCD,MAAAA,gBAAgB,CAAC,MAAMN,SAAS,CAACI,iBAAD,CAAhB,CAAhB;AACD,KAFD;;AAGAG,IAAAA,gBAAgB;AACjB,GALQ,EAKN,CAACH,iBAAD,CALM,CAAT;AAMA,QAAMI,OAAO,GAAGX,OAAO,CACrB,MAAM,CACJ;AACEY,IAAAA,MAAM,EAAEN,KADV;AAEEO,IAAAA,QAAQ,EAAE;AAFZ,GADI,CADe,EAOrB,CAACP,KAAD,CAPqB,CAAvB;AASA,QAAMQ,IAAI,GAAG,EAAb;AAEAN,EAAAA,aAAa,IACXA,aAAa,CAACO,KAAd,CAAoBC,GAApB,CAAyBC,CAAD,IAAOH,IAAI,CAACI,IAAL,CAAU;AAAEC,IAAAA,IAAI,EAAEF,CAAC,CAACG,KAAF,CAAQD;AAAhB,GAAV,CAA/B,CADF;AAEA,sBAAO,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,KAAvB;AAA8B,IAAA,OAAO,EAAER,OAAvC;AAAgD,IAAA,IAAI,EAAEG;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBD;;GAAMT,c;UAC0BH,c;;;KAD1BG,c;AAyBN,eAAeA,cAAf","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\nimport { getTracks } from \"../../utils/api\";\nimport CustomTable from \"./CustomTable\";\nconst CleanSongTable = ({ title }) => {\n  const { cleanedPlaylistID } = useGlobalState();\n  const [cleanedTracks, setCleanedTracks] = useState();\n  useEffect(() => {\n    const getCleanedTracks = async () => {\n      setCleanedTracks(await getTracks(cleanedPlaylistID));\n    };\n    getCleanedTracks();\n  }, [cleanedPlaylistID]);\n  const columns = useMemo(\n    () => [\n      {\n        Header: title,\n        accessor: \"name\",\n      },\n    ],\n    [title]\n  );\n  const data = [];\n\n  cleanedTracks &&\n    cleanedTracks.items.map((t) => data.push({ name: t.track.name }));\n  return <CustomTable hasRadio={false} columns={columns} data={data} />;\n};\n\nexport default CleanSongTable;\n"]},"metadata":{},"sourceType":"module"}
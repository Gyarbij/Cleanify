{"ast":null,"code":"module.exports = function (_uniq, _uniqWith, _partialRight) {\n  var module = {};\n\n  var xre = require('./xregexp/index.js');\n\n  var wildLeven = require('./wildcardLeven.js');\n\n  var leven = require('./leven.js');\n\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // from MDN\n  }\n\n  function validate(str) {\n    if ((typeof str === \"string\" || str instanceof String) && str.length > 0) return true;else return false;\n  }\n\n  module.validate = validate;\n\n  module.process_and_sort = function process_and_sort(str) {\n    if (!validate(str)) return \"\";\n    return str.match(/\\S+/g).sort().join(\" \").trim();\n  };\n\n  module.tokenize = function unique_tokens(str, options) {\n    if (options && options.wildcards && _uniqWith && _partialRight) {\n      var partWild = _partialRight(wildLeven, options, leven);\n\n      var wildCompare = function wildCompare(a, b) {\n        return partWild(a, b) === 0;\n      };\n\n      return _uniqWith(str.match(/\\S+/g), wildCompare);\n    } else return _uniq(str.match(/\\S+/g));\n  };\n\n  var alphaNumUnicode = xre('[^\\\\pN|\\\\pL]', 'g');\n\n  module.full_process = function full_process(str, options) {\n    if (!(str instanceof String) && typeof str !== \"string\") return \"\";\n    var processedtext;\n\n    if (options && typeof options === \"object\" && options.wildcards && typeof options.wildcards === \"string\" && options.wildcards.length > 0) {\n      var wildcards = options.wildcards.toLowerCase();\n      str = str.toLowerCase();\n\n      if (options.force_ascii) {\n        // replace non-ascii non-wildcards\n        var pattern = '[^\\x00 -\\x7F|' + escapeRegExp(wildcards) + ']';\n        str = str.replace(new RegExp(pattern, \"g\"), \"\"); // replace wildcards with wildchar\n\n        var wildpattern = '[' + escapeRegExp(wildcards) + ']';\n        var wildchar = wildcards[0];\n        str = str.replace(new RegExp(wildpattern, \"g\"), wildchar); // replace non alpha-num non-wildcards with space\n\n        var alphanumPat = '[^A-Za-z0-9' + escapeRegExp(wildcards) + ']';\n        str = str.replace(new RegExp(alphanumPat, \"g\"), \" \");\n        str = str.replace(/_/g, ' '); // wildcards are case insensitive as of now\n        // would need to make sure lower version of wildcards didnt get turned into wildcards\n\n        processedtext = str.trim();\n      } else {\n        // replace non-alphanum non-wildcards\n        var upattern = '[^\\\\pN|\\\\pL|' + escapeRegExp(wildcards) + ']';\n        var alphaNumUnicodeWild = xre(upattern, 'g');\n        str = xre.replace(str, alphaNumUnicodeWild, ' ', 'all'); // replace wildcards with wildchar\n\n        var wildpattern = '[' + escapeRegExp(wildcards) + ']';\n        var wildchar = wildcards[0];\n        str = str.replace(new RegExp(wildpattern, \"g\"), wildchar); // wildcards are case insensitive as of now\n        // would need to make sure lower version of wildcards didnt get turned into wildcards\n\n        processedtext = str.trim();\n      }\n    } else {\n      // Non-ascii won't turn into whitespace if not force_ascii\n      if (options && (options.force_ascii || options === true)) {\n        //support old behavior just passing true\n        str = str.replace(/[^\\x00-\\x7F]/g, \"\");\n        processedtext = str.replace(/\\W|_/g, ' ').toLowerCase().trim();\n      }\n\n      processedtext = xre.replace(str, alphaNumUnicode, ' ', 'all').toLowerCase().trim();\n    }\n\n    if (options && options.collapseWhitespace) {\n      processedtext = processedtext.replace(/\\s+/g, ' ');\n    }\n\n    return processedtext;\n  }; // clone/shallow copy whatev\n\n\n  module.clone_and_set_option_defaults = function (options) {\n    // don't run more than once if usign extract functions\n    if (options && options.isAClone) return options;\n    var optclone = {\n      isAClone: true\n    };\n\n    if (options) {\n      var i,\n          keys = Object.keys(options);\n\n      for (i = 0; i < keys.length; i++) {\n        optclone[keys[i]] = options[keys[i]];\n      }\n    }\n\n    if (!(typeof optclone.full_process !== 'undefined' && optclone.full_process === false)) optclone.full_process = true;\n    if (!(typeof optclone.force_ascii !== 'undefined' && optclone.force_ascii === true)) optclone.force_ascii = false; // normalize option not used unless astral is true, so true + no astral = no normalize\n\n    if (!(typeof optclone.normalize !== 'undefined' && optclone.normalize === false)) optclone.normalize = true;\n    if (typeof optclone.astral !== 'undefined' && optclone.astral === true) optclone.full_process = false;\n    if (!(typeof optclone.collapseWhitespace !== 'undefined' && optclone.collapseWhitespace === false)) optclone.collapseWhitespace = true;\n    return optclone;\n  };\n\n  module.isCustomFunc = function (func) {\n    if (typeof func === \"function\" && (func.name === \"token_set_ratio\" || func.name === \"partial_token_set_ratio\" || func.name === \"token_sort_ratio\" || func.name === \"partial_token_sort_ratio\" || func.name === \"QRatio\" || func.name === \"WRatio\" || func.name === \"distance\" || func.name === \"partial_ratio\")) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return module;\n};","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/node_modules/fuzzball/lib/utils.js"],"names":["module","exports","_uniq","_uniqWith","_partialRight","xre","require","wildLeven","leven","escapeRegExp","string","replace","validate","str","String","length","process_and_sort","match","sort","join","trim","tokenize","unique_tokens","options","wildcards","partWild","wildCompare","a","b","alphaNumUnicode","full_process","processedtext","toLowerCase","force_ascii","pattern","RegExp","wildpattern","wildchar","alphanumPat","upattern","alphaNumUnicodeWild","collapseWhitespace","clone_and_set_option_defaults","isAClone","optclone","i","keys","Object","normalize","astral","isCustomFunc","func","name"],"mappings":"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","sourcesContent":["module.exports = function (_uniq, _uniqWith, _partialRight) {\n    var module = {};\n\n    var xre = require('./xregexp/index.js');\n    var wildLeven = require('./wildcardLeven.js');\n    var leven = require('./leven.js');\n\n    function escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // from MDN\n    }\n\n     function validate(str) {\n        if ((typeof str === \"string\" || str instanceof String) && str.length > 0) return true;\n        else return false;\n    }\n\n    module.validate = validate;\n\n    module.process_and_sort = function process_and_sort(str) {\n        if (!validate(str)) return \"\";\n        return str.match(/\\S+/g).sort().join(\" \").trim();\n    }\n\n    module.tokenize = function unique_tokens(str, options) {\n        if (options && options.wildcards  && _uniqWith && _partialRight) {\n            var partWild = _partialRight(wildLeven, options, leven);\n            var wildCompare = function (a, b) { return partWild(a, b) === 0; }\n            return _uniqWith(str.match(/\\S+/g), wildCompare);\n        } \n        else return _uniq(str.match(/\\S+/g));\n    }\n\n    var alphaNumUnicode = xre('[^\\\\pN|\\\\pL]', 'g');\n    module.full_process = function full_process(str, options) {\n        if (!(str instanceof String) && typeof str !== \"string\") return \"\";\n        var processedtext;\n\n        if (options && typeof options === \"object\" && options.wildcards && typeof options.wildcards === \"string\" && options.wildcards.length > 0) {\n            var wildcards = options.wildcards.toLowerCase();\n            str = str.toLowerCase();\n            if (options.force_ascii) {\n                // replace non-ascii non-wildcards\n                var pattern = '[^\\x00 -\\x7F|' + escapeRegExp(wildcards) + ']';\n                str = str.replace(new RegExp(pattern, \"g\"), \"\");\n                \n                // replace wildcards with wildchar\n                var wildpattern = '[' + escapeRegExp(wildcards) + ']';\n                var wildchar = wildcards[0];\n                str = str.replace(new RegExp(wildpattern, \"g\"), wildchar);\n\n                // replace non alpha-num non-wildcards with space\n                var alphanumPat = '[^A-Za-z0-9' + escapeRegExp(wildcards) + ']';\n                str = str.replace(new RegExp(alphanumPat, \"g\"), \" \");\n                str = str.replace(/_/g, ' ');\n\n                // wildcards are case insensitive as of now\n                // would need to make sure lower version of wildcards didnt get turned into wildcards\n                processedtext = str.trim();\n            }\n            else {\n                // replace non-alphanum non-wildcards\n                var upattern = '[^\\\\pN|\\\\pL|' + escapeRegExp(wildcards) + ']';\n                var alphaNumUnicodeWild = xre(upattern, 'g');\n                str = xre.replace(str, alphaNumUnicodeWild, ' ', 'all');\n\n                // replace wildcards with wildchar\n                var wildpattern = '[' + escapeRegExp(wildcards) + ']';\n                var wildchar = wildcards[0];\n                str = str.replace(new RegExp(wildpattern, \"g\"), wildchar);\n\n                // wildcards are case insensitive as of now\n                // would need to make sure lower version of wildcards didnt get turned into wildcards\n                processedtext = str.trim();\n            }\n        }\n        else {\n            // Non-ascii won't turn into whitespace if not force_ascii\n            if (options && (options.force_ascii || options === true)) { //support old behavior just passing true\n                str = str.replace(/[^\\x00-\\x7F]/g, \"\");\n                processedtext = str.replace(/\\W|_/g, ' ').toLowerCase().trim();\n            }\n            processedtext = xre.replace(str, alphaNumUnicode, ' ', 'all').toLowerCase().trim();\n        }\n        if (options && options.collapseWhitespace) {\n            processedtext = processedtext.replace(/\\s+/g, ' ');\n        }\n        return processedtext;\n    }\n\n    // clone/shallow copy whatev\n    module.clone_and_set_option_defaults = function(options) {\n        // don't run more than once if usign extract functions\n        if (options && options.isAClone) return options;\n        var optclone = { isAClone: true };\n        if (options) {\n            var i, keys = Object.keys(options);\n            for (i = 0; i < keys.length; i++) {\n                optclone[keys[i]] = options[keys[i]];\n            }\n        }\n        if (!(typeof optclone.full_process !== 'undefined' && optclone.full_process === false)) optclone.full_process = true;\n        if (!(typeof optclone.force_ascii !== 'undefined' && optclone.force_ascii === true)) optclone.force_ascii = false;\n        // normalize option not used unless astral is true, so true + no astral = no normalize\n        if (!(typeof optclone.normalize !== 'undefined' && optclone.normalize === false)) optclone.normalize = true;\n        if (typeof optclone.astral !== 'undefined' && optclone.astral === true) optclone.full_process = false;\n        if (!(typeof optclone.collapseWhitespace !== 'undefined' && optclone.collapseWhitespace === false)) optclone.collapseWhitespace = true;\n        return optclone;\n    }\n\n    module.isCustomFunc = function(func) {\n        if (typeof func === \"function\" && (\n            func.name === \"token_set_ratio\" ||\n            func.name === \"partial_token_set_ratio\" ||\n            func.name === \"token_sort_ratio\" ||\n            func.name === \"partial_token_sort_ratio\" ||\n            func.name === \"QRatio\" ||\n            func.name === \"WRatio\" ||\n            func.name === \"distance\" ||\n            func.name === \"partial_ratio\"\n        )) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    return module;\n}"]},"metadata":{},"sourceType":"script"}
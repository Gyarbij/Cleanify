{"ast":null,"code":"var _jsxFileName = \"/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/SongTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Center, Spinner, Text } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\nimport CustomTable from \"./CustomTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongTable = _ref => {\n  _s();\n\n  let {\n    title\n  } = _ref;\n  const {\n    tracks\n  } = useGlobalState();\n  const columns = useMemo(() => [{\n    Header: title,\n    accessor: \"name\"\n  }], [title]);\n  const data = [];\n  tracks && tracks.items.map(t => {\n    var _t$track;\n\n    return data.push({\n      name: (_t$track = t.track) === null || _t$track === void 0 ? void 0 : _t$track.name\n    });\n  });\n  return data.length === 0 ? /*#__PURE__*/_jsxDEV(Center, {\n    h: \"700px\",\n    flexDir: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: 3,\n      children: \"Fetching tracks from playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(CustomTable, {\n    hasRadio: false,\n    columns: columns,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongTable, \"S3PClewDRt7DN+2xwKbHmk3eQGY=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = SongTable;\nexport default SongTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongTable\");","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Tables/SongTable.jsx"],"names":["Center","Spinner","Text","useMemo","useGlobalState","CustomTable","SongTable","title","tracks","columns","Header","accessor","data","items","map","t","push","name","track","length"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,SAAS,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,cAAc,EAAjC;AAEA,QAAMK,OAAO,GAAGN,OAAO,CACrB,MAAM,CACJ;AACEO,IAAAA,MAAM,EAAEH,KADV;AAEEI,IAAAA,QAAQ,EAAE;AAFZ,GADI,CADe,EAOrB,CAACJ,KAAD,CAPqB,CAAvB;AASA,QAAMK,IAAI,GAAG,EAAb;AAEAJ,EAAAA,MAAM,IAAIA,MAAM,CAACK,KAAP,CAAaC,GAAb,CAAkBC,CAAD;AAAA;;AAAA,WAAOH,IAAI,CAACI,IAAL,CAAU;AAAEC,MAAAA,IAAI,cAAEF,CAAC,CAACG,KAAJ,6CAAE,SAASD;AAAjB,KAAV,CAAP;AAAA,GAAjB,CAAV;AACA,SAAOL,IAAI,CAACO,MAAL,KAAgB,CAAhB,gBACL,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAC,OAAV;AAAkB,IAAA,OAAO,EAAC,QAA1B;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAML,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,KAAvB;AAA8B,IAAA,OAAO,EAAEV,OAAvC;AAAgD,IAAA,IAAI,EAAEG;AAAtD;AAAA;AAAA;AAAA;AAAA,UANF;AAQD,CAvBD;;GAAMN,S;UACeF,c;;;KADfE,S;AAyBN,eAAeA,SAAf","sourcesContent":["import { Center, Spinner, Text } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\nimport { useGlobalState } from \"../../contexts/GlobalContext\";\nimport CustomTable from \"./CustomTable\";\nconst SongTable = ({ title }) => {\n  const { tracks } = useGlobalState();\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: title,\n        accessor: \"name\",\n      },\n    ],\n    [title]\n  );\n  const data = [];\n\n  tracks && tracks.items.map((t) => data.push({ name: t.track?.name }));\n  return data.length === 0 ? (\n    <Center h=\"700px\" flexDir=\"column\">\n      <Text mb={3}>Fetching tracks from playlist</Text>\n      <Spinner />\n    </Center>\n  ) : (\n    <CustomTable hasRadio={false} columns={columns} data={data} />\n  );\n};\n\nexport default SongTable;\n"]},"metadata":{},"sourceType":"module"}
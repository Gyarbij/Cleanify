{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/armanrafati/Documents/Cleanify/client/node_modules/@babel/runtime/regenerator/index.js\";import{Heading,Flex,VStack,Text,Center}from\"@chakra-ui/layout\";import{useCallback,useEffect,useState}from\"react\";import{createPlaylist,getTracks,getNextTracks,getUser,deletePlaylist,addTracksToPlaylist,getPlaylists,searchForTracks}from\"../utils/api.js\";import{Button,SimpleGrid,Container,useToast,useDisclosure}from\"@chakra-ui/react\";import PlaylistTable from\"../components/Tables/PlaylistTable.jsx\";import SongTable from\"../components/Tables/SongTable.jsx\";import{useGlobalState}from\"../contexts/GlobalContext.jsx\";import CleanSongTable from\"../components/Tables/CleanSongTable.jsx\";import{SummaryModal}from\"../components/Modals/SummaryModal.jsx\";import Failed from\"./Failed.jsx\";import useAuth from\"../hooks/useAuth.jsx\";import SpotifyWebApi from\"spotify-web-api-node\";import{ConflictModal}from\"../components/Modals/Conflict/ConflictModal.jsx\";import ProgressBar from\"../components/ProgressBar.jsx\";import{CLIENT_ID}from\"../utils/Constants.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var fuzzball=require(\"fuzzball\");export var spotifyApi=new SpotifyWebApi({clientId:CLIENT_ID});var Home=function Home(_ref){var code=_ref.code;var accessToken=useAuth(code);var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useGlobalState=useGlobalState(),setToken=_useGlobalState.setToken,setCheckedPlaylist=_useGlobalState.setCheckedPlaylist,songsToResolve=_useGlobalState.songsToResolve,setSongsToResolve=_useGlobalState.setSongsToResolve;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),cleanifyStatus=_useState4[0],setCleanifyStatus=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),deleteStatus=_useState6[0],setDeleteStatus=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),cleanifyProgress=_useState8[0],setCleanifyProgress=_useState8[1];useEffect(function(){if(!accessToken)return;spotifyApi.setAccessToken(accessToken);setToken(accessToken);spotifyApi.setAccessToken(accessToken);localStorage.setItem(\"api-key\",accessToken);},[accessToken,setToken]);var _useDisclosure=useDisclosure(),isSummaryOpen=_useDisclosure.isOpen,onSummaryOpen=_useDisclosure.onOpen,onSummaryClose=_useDisclosure.onClose;var _useDisclosure2=useDisclosure(),isResolveOpen=_useDisclosure2.isOpen,onResolveOpen=_useDisclosure2.onOpen,onResolveClose=_useDisclosure2.onClose;var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),isCleanifyLoading=_useState10[0],setisCleanifyLoading=_useState10[1];var toast=useToast();var _useGlobalState2=useGlobalState(),checkedPlaylist=_useGlobalState2.checkedPlaylist,playlists=_useGlobalState2.playlists,tracks=_useGlobalState2.tracks,setPlaylists=_useGlobalState2.setPlaylists,setTracks=_useGlobalState2.setTracks,cleanedPlaylistID=_useGlobalState2.cleanedPlaylistID,setCleanedPlaylistID=_useGlobalState2.setCleanedPlaylistID;useEffect(function(){var loadUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setUser;_context.next=3;return getUser();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function loadUser(){return _ref2.apply(this,arguments);};}();loadUser();},[]);var handleDelete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var refreshedPlaylists;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setDeleteStatus(true);setCheckedPlaylist(String(Number(checkedPlaylist)-1)>=0?String(Number(checkedPlaylist)-1):\"\");_context2.next=4;return deletePlaylist(playlists.items[checkedPlaylist].id);case 4:_context2.next=6;return getPlaylists();case 6:refreshedPlaylists=_context2.sent;if(!(refreshedPlaylists instanceof Error)){_context2.next=10;break;}toast({title:\"Unable to perform action. Please try refreshing the page and log in again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});return _context2.abrupt(\"return\");case 10:setPlaylists(refreshedPlaylists);setDeleteStatus(false);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDelete(){return _ref3.apply(this,arguments);};}();var containSameArtists=function containSameArtists(first,second){if(first.artists.length!==second.artists.length)return false;var artistCount=first.artists.length;for(var index=0;index<artistCount;index++){if(first.artists[index].name!==second.artists[index].name){return false;}}return true;};var getAllTracks=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var allTracks,tracks;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setTracks({items:[]});allTracks=[];_context3.next=4;return getTracks(playlists.items[checkedPlaylist].id);case 4:tracks=_context3.sent;if(!(tracks instanceof Error)){_context3.next=8;break;}toast({title:\"Unable to perform action. Please try refreshing the page and log in again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});return _context3.abrupt(\"return\");case 8:if(!tracks){toast({title:\"Error fetching all tracks. Refresh and try again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});}allTracks.push.apply(allTracks,_toConsumableArray(tracks.items));case 10:if(!(tracks&&tracks.next)){_context3.next=18;break;}_context3.next=13;return getNextTracks(tracks.next);case 13:tracks=_context3.sent;if(!tracks){toast({title:\"Error fetching all tracks. Refresh and try again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});}if(tracks&&tracks.items){allTracks.push.apply(allTracks,_toConsumableArray(tracks.items));}_context3.next=10;break;case 18:tracks={items:allTracks};setTracks(tracks);return _context3.abrupt(\"return\",allTracks);case 21:case\"end\":return _context3.stop();}}},_callee3);})),[checkedPlaylist,setTracks,toast]);useEffect(function(){if(checkedPlaylist&&checkedPlaylist>=0){getAllTracks();}},[checkedPlaylist,getAllTracks]);var handleCleanify=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var cleanTrackIDs,explicitTracks,_iterator,_step,_t,cleanVersionTrackIDs,remainingExplicitSongs,potentiallyCleanSongs,total,index,_i,_explicitTracks,track,trackResponses,isClean,_iterator2,_step2,t,newPlaylist,allCleanSongs,remainingSongs;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:setCleanifyStatus(true);_context4.next=3;return getAllTracks();case 3:cleanTrackIDs=[];explicitTracks=[];_iterator=_createForOfIteratorHelper(tracks.items);_context4.prev=6;_iterator.s();case 8:if((_step=_iterator.n()).done){_context4.next=15;break;}_t=_step.value;if(_t.track){_context4.next=12;break;}return _context4.abrupt(\"continue\",13);case 12:_t&&_t.track&&_t.track.explicit?explicitTracks.push({query:\"\".concat(_t.track.name,\" \").concat(_t.track.artists[0].name),name:_t.track.name,artists:_t.track.artists,uri:_t.track.uri,link:_t.track.external_urls.spotify}):cleanTrackIDs.push(_t.track.uri);case 13:_context4.next=8;break;case 15:_context4.next=20;break;case 17:_context4.prev=17;_context4.t0=_context4[\"catch\"](6);_iterator.e(_context4.t0);case 20:_context4.prev=20;_iterator.f();return _context4.finish(20);case 23:cleanVersionTrackIDs=[];remainingExplicitSongs=[];potentiallyCleanSongs=new Map();total=explicitTracks.length;index=0;_i=0,_explicitTracks=explicitTracks;case 29:if(!(_i<_explicitTracks.length)){_context4.next=72;break;}track=_explicitTracks[_i];index++;if(!(track.query.length===0)){_context4.next=34;break;}return _context4.abrupt(\"continue\",69);case 34:_context4.next=36;return searchForTracks(track.query.trim().replaceAll(\"#\",\"\"));case 36:trackResponses=_context4.sent;console.log(trackResponses);if(!trackResponses){toast({title:\"Error searching for track. Refresh and try again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});}if(!(trackResponses instanceof Error)){_context4.next=42;break;}toast({title:\"Unable to perform action. Please try refreshing the page and log in again\",position:\"top-right\",status:\"error\",duration:7000,isClosable:true});return _context4.abrupt(\"return\");case 42:isClean=false;if(!(trackResponses&&trackResponses.tracks.items.length>0)){_context4.next=68;break;}_iterator2=_createForOfIteratorHelper(trackResponses.tracks.items);_context4.prev=45;_iterator2.s();case 47:if((_step2=_iterator2.n()).done){_context4.next=59;break;}t=_step2.value;if(!(t&&t.name&&!t.explicit&&containSameArtists(t,track))){_context4.next=57;break;}if(!(fuzzball.distance(t.name,track.name)===0)){_context4.next=56;break;}cleanVersionTrackIDs.push(t.uri);isClean=true;return _context4.abrupt(\"break\",59);case 56:if(fuzzball.ratio(t.name,track.name)>1){if(potentiallyCleanSongs.has(track.name)){potentiallyCleanSongs.get(track.name).push({name:t.name,link:t.external_urls.spotify,uri:t.uri,original_track_uri:track.uri,original_track_link:track.link});}else{potentiallyCleanSongs.set(track.name,[{name:t.name,link:t.external_urls.spotify,uri:t.uri,original_track_uri:track.uri,original_track_link:track.link}]);}}case 57:_context4.next=47;break;case 59:_context4.next=64;break;case 61:_context4.prev=61;_context4.t1=_context4[\"catch\"](45);_iterator2.e(_context4.t1);case 64:_context4.prev=64;_iterator2.f();return _context4.finish(64);case 67:if(!isClean){remainingExplicitSongs.push({name:track.name,queryURL:\"https://open.spotify.com/search/\".concat(encodeURIComponent(track.query))});}case 68:setCleanifyProgress(index/total*100);case 69:_i++;_context4.next=29;break;case 72:setSongsToResolve(potentiallyCleanSongs);_context4.next=75;return createPlaylist(\"\".concat(playlists.items[checkedPlaylist].name,\" (Cleanified)\"),user.id);case 75:newPlaylist=_context4.sent;_context4.t2=setPlaylists;_context4.next=79;return getPlaylists();case 79:_context4.t3=_context4.sent;(0,_context4.t2)(_context4.t3);allCleanSongs=[].concat(cleanTrackIDs,cleanVersionTrackIDs);remainingSongs=[];case 83:if(!(allCleanSongs.length>0)){_context4.next=90;break;}remainingSongs=allCleanSongs.splice(0,100);if(!(remainingSongs.length>0)){_context4.next=88;break;}_context4.next=88;return addTracksToPlaylist(newPlaylist.id,remainingSongs);case 88:_context4.next=83;break;case 90:setisCleanifyLoading({numOriginalClean:cleanTrackIDs.length,numCleanFound:cleanVersionTrackIDs.length,numStillMissing:remainingExplicitSongs});setCleanedPlaylistID(newPlaylist.id);setCleanifyStatus(false);case 93:case\"end\":return _context4.stop();}}},_callee4,null,[[6,17,20,23],[45,61,64,67]]);}));return function handleCleanify(){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Flex,{align:\"center\",justify:\"center\",p:[0,1,15,15],children:/*#__PURE__*/_jsxs(VStack,{children:[/*#__PURE__*/_jsx(Heading,{children:\"Cleanify\"}),user&&/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"Username: \".concat(user.display_name)}),!user&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Failed,{})}),user&&/*#__PURE__*/_jsxs(SimpleGrid,{spacing:[1,3,5,5],columns:[1,1,2,2],children:[/*#__PURE__*/_jsx(Button,{isLoading:cleanifyStatus,colorScheme:\"green\",onClick:handleCleanify,loadingText:\"Cleanifying\",isDisabled:!checkedPlaylist,children:\"Cleanify Playlist\"}),/*#__PURE__*/_jsx(Button,{colorScheme:\"red\",onClick:handleDelete,isLoading:deleteStatus,loadingText:\"Deleting\",isDisabled:!checkedPlaylist,children:\"Delete Playlist\"}),cleanedPlaylistID&&/*#__PURE__*/_jsx(Button,{isDisabled:!cleanedPlaylistID,onClick:onSummaryOpen,children:\"View Summary\"}),cleanedPlaylistID&&songsToResolve.size!==0&&/*#__PURE__*/_jsx(Button,{isDisabled:songsToResolve.size===0,colorScheme:\"yellow\",onClick:onResolveOpen,children:\"Resolve Conflicts\"})]}),isCleanifyLoading&&/*#__PURE__*/_jsx(SummaryModal,{isOpen:isSummaryOpen,onClose:onSummaryClose,details:isCleanifyLoading}),songsToResolve&&/*#__PURE__*/_jsx(ConflictModal,{isOpen:isResolveOpen,onClose:onResolveClose,details:songsToResolve}),/*#__PURE__*/_jsxs(SimpleGrid,{columns:[1,1,1,3],alignItems:\"center\",spacing:5,children:[/*#__PURE__*/_jsx(Container,{mt:[20,1,1,1],mb:[20,1,1,1],h:\"700px\",width:[\"200px\",\"300px\",\"400px\"],children:user&&/*#__PURE__*/_jsx(PlaylistTable,{})}),/*#__PURE__*/_jsx(Container,{mt:[\"150px\",1,1,1],mb:[20,1,1,1],h:\"700px\",width:[\"200px\",\"300px\",\"400px\"],children:checkedPlaylist&&/*#__PURE__*/_jsx(SongTable,{title:\"Before Cleanified \".concat(tracks?\"(\".concat(tracks.items.length,\" songs)\"):\"\")})}),/*#__PURE__*/_jsx(Container,{mt:[0,1,1,1],mb:[20,1,1,1],h:\"700px\",width:[\"200px\",\"300px\",\"400px\"],children:checkedPlaylist&&cleanedPlaylistID?/*#__PURE__*/_jsx(CleanSongTable,{title:\"After Cleanified (\".concat(isCleanifyLoading.numCleanFound+isCleanifyLoading.numOriginalClean,\" songs)\")}):cleanifyProgress&&cleanifyProgress!==100&&/*#__PURE__*/_jsx(Center,{h:\"700px\",flexDir:\"column\",children:/*#__PURE__*/_jsx(ProgressBar,{value:cleanifyProgress})})})]})]})});};export default Home;","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/pages/Home.jsx"],"names":["Heading","Flex","VStack","Text","Center","useCallback","useEffect","useState","createPlaylist","getTracks","getNextTracks","getUser","deletePlaylist","addTracksToPlaylist","getPlaylists","searchForTracks","Button","SimpleGrid","Container","useToast","useDisclosure","PlaylistTable","SongTable","useGlobalState","CleanSongTable","SummaryModal","Failed","useAuth","SpotifyWebApi","ConflictModal","ProgressBar","CLIENT_ID","fuzzball","require","spotifyApi","clientId","Home","code","accessToken","user","setUser","setToken","setCheckedPlaylist","songsToResolve","setSongsToResolve","cleanifyStatus","setCleanifyStatus","deleteStatus","setDeleteStatus","cleanifyProgress","setCleanifyProgress","setAccessToken","localStorage","setItem","isSummaryOpen","isOpen","onSummaryOpen","onOpen","onSummaryClose","onClose","isResolveOpen","onResolveOpen","onResolveClose","isCleanifyLoading","setisCleanifyLoading","toast","checkedPlaylist","playlists","tracks","setPlaylists","setTracks","cleanedPlaylistID","setCleanedPlaylistID","loadUser","handleDelete","String","Number","items","id","refreshedPlaylists","Error","title","position","status","duration","isClosable","containSameArtists","first","second","artists","length","artistCount","index","name","getAllTracks","allTracks","push","next","handleCleanify","cleanTrackIDs","explicitTracks","t","track","explicit","query","uri","link","external_urls","spotify","cleanVersionTrackIDs","remainingExplicitSongs","potentiallyCleanSongs","Map","total","trim","replaceAll","trackResponses","console","log","isClean","distance","ratio","has","get","original_track_uri","original_track_link","set","queryURL","encodeURIComponent","newPlaylist","allCleanSongs","remainingSongs","splice","numOriginalClean","numCleanFound","numStillMissing","display_name","size"],"mappings":"6qBAAA,OAASA,OAAT,CAAkBC,IAAlB,CAAwBC,MAAxB,CAAgCC,IAAhC,CAAsCC,MAAtC,KAAoD,mBAApD,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,OACEC,cADF,CAEEC,SAFF,CAGEC,aAHF,CAIEC,OAJF,CAKEC,cALF,CAMEC,mBANF,CAOEC,YAPF,CAQEC,eARF,KASO,iBATP,CAUA,OACEC,MADF,CAEEC,UAFF,CAGEC,SAHF,CAIEC,QAJF,CAKEC,aALF,KAMO,kBANP,CAOA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,OAASC,cAAT,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,yCAA3B,CACA,OAASC,YAAT,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CACA,OAASC,aAAT,KAA8B,iDAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,OAASC,SAAT,KAA0B,wBAA1B,C,6IACA,GAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAxB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,GAAIN,CAAAA,aAAJ,CAAkB,CAC1CO,QAAQ,CAAEJ,SADgC,CAAlB,CAAnB,CAIP,GAAMK,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACzB,GAAMC,CAAAA,WAAW,CAAGX,OAAO,CAACU,IAAD,CAA3B,CACA,cAAwB9B,QAAQ,EAAhC,wCAAOgC,IAAP,eAAaC,OAAb,eACA,oBACEjB,cAAc,EADhB,CAAQkB,QAAR,iBAAQA,QAAR,CAAkBC,kBAAlB,iBAAkBA,kBAAlB,CAAsCC,cAAtC,iBAAsCA,cAAtC,CAAsDC,iBAAtD,iBAAsDA,iBAAtD,CAEA,eAA4CrC,QAAQ,CAAC,KAAD,CAApD,yCAAOsC,cAAP,eAAuBC,iBAAvB,eACA,eAAwCvC,QAAQ,CAAC,KAAD,CAAhD,yCAAOwC,YAAP,eAAqBC,eAArB,eACA,eAAgDzC,QAAQ,CAAC,KAAD,CAAxD,yCAAO0C,gBAAP,eAAyBC,mBAAzB,eAEA5C,SAAS,CAAC,UAAM,CACd,GAAI,CAACgC,WAAL,CAAkB,OAClBJ,UAAU,CAACiB,cAAX,CAA0Bb,WAA1B,EACAG,QAAQ,CAACH,WAAD,CAAR,CACAJ,UAAU,CAACiB,cAAX,CAA0Bb,WAA1B,EACAc,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgCf,WAAhC,EACD,CANQ,CAMN,CAACA,WAAD,CAAcG,QAAd,CANM,CAAT,CAQA,mBAIIrB,aAAa,EAJjB,CACUkC,aADV,gBACEC,MADF,CAEUC,aAFV,gBAEEC,MAFF,CAGWC,cAHX,gBAGEC,OAHF,CAMA,oBAIIvC,aAAa,EAJjB,CACUwC,aADV,iBACEL,MADF,CAEUM,aAFV,iBAEEJ,MAFF,CAGWK,cAHX,iBAGEH,OAHF,CAKA,eAAkDpD,QAAQ,EAA1D,0CAAOwD,iBAAP,gBAA0BC,oBAA1B,gBAEA,GAAMC,CAAAA,KAAK,CAAG9C,QAAQ,EAAtB,CAEA,qBAQII,cAAc,EARlB,CACE2C,eADF,kBACEA,eADF,CAEEC,SAFF,kBAEEA,SAFF,CAGEC,MAHF,kBAGEA,MAHF,CAIEC,YAJF,kBAIEA,YAJF,CAKEC,SALF,kBAKEA,SALF,CAMEC,iBANF,kBAMEA,iBANF,CAOEC,oBAPF,kBAOEA,oBAPF,CAUAlE,SAAS,CAAC,UAAM,CACd,GAAMmE,CAAAA,QAAQ,2FAAG,+IACfjC,OADe,uBACD7B,CAAAA,OAAO,EADN,qHAAH,kBAAR8D,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACT,CALQ,CAKN,EALM,CAAT,CAOA,GAAMC,CAAAA,YAAY,2FAAG,+JACnB1B,eAAe,CAAC,IAAD,CAAf,CACAN,kBAAkB,CAChBiC,MAAM,CAACC,MAAM,CAACV,eAAD,CAAN,CAA0B,CAA3B,CAAN,EAAuC,CAAvC,CACIS,MAAM,CAACC,MAAM,CAACV,eAAD,CAAN,CAA0B,CAA3B,CADV,CAEI,EAHY,CAAlB,CAFmB,uBAQbtD,CAAAA,cAAc,CAACuD,SAAS,CAACU,KAAV,CAAgBX,eAAhB,EAAiCY,EAAlC,CARD,+BASchE,CAAAA,YAAY,EAT1B,QASbiE,kBATa,qBAUfA,kBAAkB,WAAYC,CAAAA,KAVf,4BAWjBf,KAAK,CAAC,CACJgB,KAAK,4EADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CAXiB,0CAqBnBhB,YAAY,CAACU,kBAAD,CAAZ,CACA/B,eAAe,CAAC,KAAD,CAAf,CAtBmB,yDAAH,kBAAZ0B,CAAAA,YAAY,2CAAlB,CAyBA,GAAMY,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC5C,GAAID,KAAK,CAACE,OAAN,CAAcC,MAAd,GAAyBF,MAAM,CAACC,OAAP,CAAeC,MAA5C,CAAoD,MAAO,MAAP,CACpD,GAAIC,CAAAA,WAAW,CAAGJ,KAAK,CAACE,OAAN,CAAcC,MAAhC,CACA,IAAK,GAAIE,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGD,WAA5B,CAAyCC,KAAK,EAA9C,CAAkD,CAChD,GAAIL,KAAK,CAACE,OAAN,CAAcG,KAAd,EAAqBC,IAArB,GAA8BL,MAAM,CAACC,OAAP,CAAeG,KAAf,EAAsBC,IAAxD,CAA8D,CAC5D,MAAO,MAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CATD,CAWA,GAAMC,CAAAA,YAAY,CAAGzF,WAAW,sEAAC,6JAC/BiE,SAAS,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAD,CAAT,CAEMkB,SAHyB,CAGb,EAHa,wBAIZtF,CAAAA,SAAS,CAAC0D,SAAS,CAACU,KAAV,CAAgBX,eAAhB,EAAiCY,EAAlC,CAJG,QAI3BV,MAJ2B,qBAK3BA,MAAM,WAAYY,CAAAA,KALS,2BAM7Bf,KAAK,CAAC,CACJgB,KAAK,4EADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CAN6B,yCAe/B,GAAI,CAACjB,MAAL,CAAa,CACXH,KAAK,CAAC,CACJgB,KAAK,mDADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CAOD,CACDU,SAAS,CAACC,IAAV,OAAAD,SAAS,oBAAS3B,MAAM,CAACS,KAAhB,EAAT,CAxB+B,aAyBxBT,MAAM,EAAIA,MAAM,CAAC6B,IAzBO,oDA0BdvF,CAAAA,aAAa,CAAC0D,MAAM,CAAC6B,IAAR,CA1BC,SA0B7B7B,MA1B6B,gBA2B7B,GAAI,CAACA,MAAL,CAAa,CACXH,KAAK,CAAC,CACJgB,KAAK,mDADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CAOD,CACD,GAAIjB,MAAM,EAAIA,MAAM,CAACS,KAArB,CAA4B,CAC1BkB,SAAS,CAACC,IAAV,OAAAD,SAAS,oBAAS3B,MAAM,CAACS,KAAhB,EAAT,CACD,CAtC4B,gCAwC/BT,MAAM,CAAG,CAAES,KAAK,CAAEkB,SAAT,CAAT,CAEAzB,SAAS,CAACF,MAAD,CAAT,CA1C+B,iCA2CxB2B,SA3CwB,2DAAD,GA6C7B,CAAC7B,eAAD,CAAkBI,SAAlB,CAA6BL,KAA7B,CA7C6B,CAAhC,CA+CA3D,SAAS,CAAC,UAAM,CACd,GAAI4D,eAAe,EAAIA,eAAe,EAAI,CAA1C,CAA6C,CAC3C4B,YAAY,GACb,CACF,CAJQ,CAIN,CAAC5B,eAAD,CAAkB4B,YAAlB,CAJM,CAAT,CAMA,GAAMI,CAAAA,cAAc,2FAAG,uXACrBpD,iBAAiB,CAAC,IAAD,CAAjB,CADqB,uBAGfgD,CAAAA,YAAY,EAHG,QAKfK,aALe,CAKC,EALD,CAMfC,cANe,CAME,EANF,sCAQPhC,MAAM,CAACS,KARA,gGAQZwB,EARY,gBASdA,EAAC,CAACC,KATY,0EAUnBD,EAAC,EAAIA,EAAC,CAACC,KAAP,EAAgBD,EAAC,CAACC,KAAF,CAAQC,QAAxB,CACIH,cAAc,CAACJ,IAAf,CAAoB,CAClBQ,KAAK,WAAKH,EAAC,CAACC,KAAF,CAAQT,IAAb,aAAqBQ,EAAC,CAACC,KAAF,CAAQb,OAAR,CAAgB,CAAhB,EAAmBI,IAAxC,CADa,CAElBA,IAAI,CAAEQ,EAAC,CAACC,KAAF,CAAQT,IAFI,CAGlBJ,OAAO,CAAEY,EAAC,CAACC,KAAF,CAAQb,OAHC,CAIlBgB,GAAG,CAAEJ,EAAC,CAACC,KAAF,CAAQG,GAJK,CAKlBC,IAAI,CAAEL,EAAC,CAACC,KAAF,CAAQK,aAAR,CAAsBC,OALV,CAApB,CADJ,CAQIT,aAAa,CAACH,IAAd,CAAmBK,EAAC,CAACC,KAAF,CAAQG,GAA3B,CARJ,CAVmB,kOAqBfI,oBArBe,CAqBQ,EArBR,CAsBfC,sBAtBe,CAsBU,EAtBV,CAuBfC,qBAvBe,CAuBS,GAAIC,CAAAA,GAAJ,EAvBT,CAyBfC,KAzBe,CAyBPb,cAAc,CAACV,MAzBR,CA0BjBE,KA1BiB,CA0BT,CA1BS,sBA2BHQ,cA3BG,mEA2BZE,KA3BY,qBA4BnBV,KAAK,GA5Bc,KA6BfU,KAAK,CAACE,KAAN,CAAYd,MAAZ,GAAuB,CA7BR,mGA8BU3E,CAAAA,eAAe,CAC1CuF,KAAK,CAACE,KAAN,CAAYU,IAAZ,GAAmBC,UAAnB,CAA8B,GAA9B,CAAmC,EAAnC,CAD0C,CA9BzB,SA8BbC,cA9Ba,gBAiCnBC,OAAO,CAACC,GAAR,CAAYF,cAAZ,EACA,GAAI,CAACA,cAAL,CAAqB,CACnBnD,KAAK,CAAC,CACJgB,KAAK,mDADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CAOD,CA1CkB,KA2Cf+B,cAAc,WAAYpC,CAAAA,KA3CX,4BA4CjBf,KAAK,CAAC,CACJgB,KAAK,4EADD,CAEJC,QAAQ,CAAE,WAFN,CAGJC,MAAM,CAAE,OAHJ,CAIJC,QAAQ,CAAE,IAJN,CAKJC,UAAU,CAAE,IALR,CAAD,CAAL,CA5CiB,0CAqDfkC,OArDe,CAqDL,KArDK,MAsDfH,cAAc,EAAIA,cAAc,CAAChD,MAAf,CAAsBS,KAAtB,CAA4Ba,MAA5B,CAAqC,CAtDxC,kEAuDH0B,cAAc,CAAChD,MAAf,CAAsBS,KAvDnB,qGAuDRwB,CAvDQ,mBAwDXA,CAAC,EAAIA,CAAC,CAACR,IAAP,EAAe,CAACQ,CAAC,CAACE,QAAlB,EAA8BjB,kBAAkB,CAACe,CAAD,CAAIC,KAAJ,CAxDrC,iCAyDTtE,QAAQ,CAACwF,QAAT,CAAkBnB,CAAC,CAACR,IAApB,CAA0BS,KAAK,CAACT,IAAhC,IAA0C,CAzDjC,4BA0DXgB,oBAAoB,CAACb,IAArB,CAA0BK,CAAC,CAACI,GAA5B,EACAc,OAAO,CAAG,IAAV,CA3DW,4CA6DN,GAAIvF,QAAQ,CAACyF,KAAT,CAAepB,CAAC,CAACR,IAAjB,CAAuBS,KAAK,CAACT,IAA7B,EAAqC,CAAzC,CAA4C,CACjD,GAAIkB,qBAAqB,CAACW,GAAtB,CAA0BpB,KAAK,CAACT,IAAhC,CAAJ,CAA2C,CACzCkB,qBAAqB,CAACY,GAAtB,CAA0BrB,KAAK,CAACT,IAAhC,EAAsCG,IAAtC,CAA2C,CACzCH,IAAI,CAAEQ,CAAC,CAACR,IADiC,CAEzCa,IAAI,CAAEL,CAAC,CAACM,aAAF,CAAgBC,OAFmB,CAGzCH,GAAG,CAAEJ,CAAC,CAACI,GAHkC,CAIzCmB,kBAAkB,CAAEtB,KAAK,CAACG,GAJe,CAKzCoB,mBAAmB,CAAEvB,KAAK,CAACI,IALc,CAA3C,EAOD,CARD,IAQO,CACLK,qBAAqB,CAACe,GAAtB,CAA0BxB,KAAK,CAACT,IAAhC,CAAsC,CACpC,CACEA,IAAI,CAAEQ,CAAC,CAACR,IADV,CAEEa,IAAI,CAAEL,CAAC,CAACM,aAAF,CAAgBC,OAFxB,CAGEH,GAAG,CAAEJ,CAAC,CAACI,GAHT,CAIEmB,kBAAkB,CAAEtB,KAAK,CAACG,GAJ5B,CAKEoB,mBAAmB,CAAEvB,KAAK,CAACI,IAL7B,CADoC,CAAtC,EASD,CACF,CAjFY,sOAoFjB,GAAI,CAACa,OAAL,CAAc,CACZT,sBAAsB,CAACd,IAAvB,CAA4B,CAC1BH,IAAI,CAAES,KAAK,CAACT,IADc,CAE1BkC,QAAQ,2CAAqCC,kBAAkB,CAC7D1B,KAAK,CAACE,KADuD,CAAvD,CAFkB,CAA5B,EAMD,CA3FgB,QA6FnBtD,mBAAmB,CAAE0C,KAAK,CAAGqB,KAAT,CAAkB,GAAnB,CAAnB,CA7FmB,6CAgGrBrE,iBAAiB,CAACmE,qBAAD,CAAjB,CAhGqB,wBAkGKvG,CAAAA,cAAc,WACnC2D,SAAS,CAACU,KAAV,CAAgBX,eAAhB,EAAiC2B,IADE,kBAEtCtD,IAAI,CAACuC,EAFiC,CAlGnB,SAkGfmD,WAlGe,6BAsGrB5D,YAtGqB,yBAsGFvD,CAAAA,YAAY,EAtGV,oEAwGjBoH,aAxGiB,WAwGG/B,aAxGH,CAwGqBU,oBAxGrB,EAyGjBsB,cAzGiB,CAyGA,EAzGA,cA2GdD,aAAa,CAACxC,MAAd,CAAuB,CA3GT,4BA4GnByC,cAAc,CAAGD,aAAa,CAACE,MAAd,CAAqB,CAArB,CAAwB,GAAxB,CAAjB,CA5GmB,KA6GfD,cAAc,CAACzC,MAAf,CAAwB,CA7GT,oDA8GX7E,CAAAA,mBAAmB,CAACoH,WAAW,CAACnD,EAAb,CAAiBqD,cAAjB,CA9GR,yCAkHrBnE,oBAAoB,CAAC,CACnBqE,gBAAgB,CAAElC,aAAa,CAACT,MADb,CAEnB4C,aAAa,CAAEzB,oBAAoB,CAACnB,MAFjB,CAGnB6C,eAAe,CAAEzB,sBAHE,CAAD,CAApB,CAMAtC,oBAAoB,CAACyD,WAAW,CAACnD,EAAb,CAApB,CACAhC,iBAAiB,CAAC,KAAD,CAAjB,CAzHqB,2FAAH,kBAAdoD,CAAAA,cAAc,2CAApB,CA4HA,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,OAAO,CAAC,QAA7B,CAAsC,CAAC,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,EAAP,CAAW,EAAX,CAAzC,uBACE,MAAC,MAAD,yBACE,KAAC,OAAD,uBADF,CAGG3D,IAAI,eAAI,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,8BAAkCA,IAAI,CAACiG,YAAvC,GAHX,CAIG,CAACjG,IAAD,eACC,sCACE,KAAC,MAAD,IADF,EALJ,CAUGA,IAAI,eACH,MAAC,UAAD,EAAY,OAAO,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAArB,CAAmC,OAAO,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAA5C,wBACE,KAAC,MAAD,EACE,SAAS,CAAEM,cADb,CAEE,WAAW,CAAC,OAFd,CAGE,OAAO,CAAEqD,cAHX,CAIE,WAAW,CAAC,aAJd,CAKE,UAAU,CAAE,CAAChC,eALf,+BADF,cAUE,KAAC,MAAD,EACE,WAAW,CAAC,KADd,CAEE,OAAO,CAAEQ,YAFX,CAGE,SAAS,CAAE3B,YAHb,CAIE,WAAW,CAAC,UAJd,CAKE,UAAU,CAAE,CAACmB,eALf,6BAVF,CAmBGK,iBAAiB,eAChB,KAAC,MAAD,EAAQ,UAAU,CAAE,CAACA,iBAArB,CAAwC,OAAO,CAAEf,aAAjD,0BApBJ,CAwBGe,iBAAiB,EAAI5B,cAAc,CAAC8F,IAAf,GAAwB,CAA7C,eACC,KAAC,MAAD,EACE,UAAU,CAAE9F,cAAc,CAAC8F,IAAf,GAAwB,CADtC,CAEE,WAAW,CAAC,QAFd,CAGE,OAAO,CAAE5E,aAHX,+BAzBJ,GAXJ,CA8CGE,iBAAiB,eAChB,KAAC,YAAD,EACE,MAAM,CAAET,aADV,CAEE,OAAO,CAAEI,cAFX,CAGE,OAAO,CAAEK,iBAHX,EA/CJ,CAqDGpB,cAAc,eACb,KAAC,aAAD,EACE,MAAM,CAAEiB,aADV,CAEE,OAAO,CAAEE,cAFX,CAGE,OAAO,CAAEnB,cAHX,EAtDJ,cA4DE,MAAC,UAAD,EAAY,OAAO,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAArB,CAAmC,UAAU,CAAC,QAA9C,CAAuD,OAAO,CAAE,CAAhE,wBACE,KAAC,SAAD,EACE,EAAE,CAAE,CAAC,EAAD,CAAK,CAAL,CAAQ,CAAR,CAAW,CAAX,CADN,CAEE,EAAE,CAAE,CAAC,EAAD,CAAK,CAAL,CAAQ,CAAR,CAAW,CAAX,CAFN,CAGE,CAAC,CAAC,OAHJ,CAIE,KAAK,CAAE,CAAC,OAAD,CAAU,OAAV,CAAmB,OAAnB,CAJT,UAMGJ,IAAI,eAAI,KAAC,aAAD,IANX,EADF,cASE,KAAC,SAAD,EACE,EAAE,CAAE,CAAC,OAAD,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CADN,CAEE,EAAE,CAAE,CAAC,EAAD,CAAK,CAAL,CAAQ,CAAR,CAAW,CAAX,CAFN,CAGE,CAAC,CAAC,OAHJ,CAIE,KAAK,CAAE,CAAC,OAAD,CAAU,OAAV,CAAmB,OAAnB,CAJT,UAMG2B,eAAe,eACd,KAAC,SAAD,EACE,KAAK,6BACHE,MAAM,YAAOA,MAAM,CAACS,KAAP,CAAaa,MAApB,YAAsC,EADzC,CADP,EAPJ,EATF,cAuBE,KAAC,SAAD,EACE,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CADN,CAEE,EAAE,CAAE,CAAC,EAAD,CAAK,CAAL,CAAQ,CAAR,CAAW,CAAX,CAFN,CAGE,CAAC,CAAC,OAHJ,CAIE,KAAK,CAAE,CAAC,OAAD,CAAU,OAAV,CAAmB,OAAnB,CAJT,UAMGxB,eAAe,EAAIK,iBAAnB,cACC,KAAC,cAAD,EACE,KAAK,6BACHR,iBAAiB,CAACuE,aAAlB,CACAvE,iBAAiB,CAACsE,gBAFf,WADP,EADD,CAQCpF,gBAAgB,EAChBA,gBAAgB,GAAK,GADrB,eAEE,KAAC,MAAD,EAAQ,CAAC,CAAC,OAAV,CAAkB,OAAO,CAAC,QAA1B,uBACE,KAAC,WAAD,EAAa,KAAK,CAAEA,gBAApB,EADF,EAhBN,EAvBF,GA5DF,GADF,EADF,CA+GD,CArXD,CAuXA,cAAeb,CAAAA,IAAf","sourcesContent":["import { Heading, Flex, VStack, Text, Center } from \"@chakra-ui/layout\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport {\n  createPlaylist,\n  getTracks,\n  getNextTracks,\n  getUser,\n  deletePlaylist,\n  addTracksToPlaylist,\n  getPlaylists,\n  searchForTracks,\n} from \"../utils/api.js\";\nimport {\n  Button,\n  SimpleGrid,\n  Container,\n  useToast,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport PlaylistTable from \"../components/Tables/PlaylistTable.jsx\";\nimport SongTable from \"../components/Tables/SongTable.jsx\";\nimport { useGlobalState } from \"../contexts/GlobalContext.jsx\";\nimport CleanSongTable from \"../components/Tables/CleanSongTable.jsx\";\nimport { SummaryModal } from \"../components/Modals/SummaryModal.jsx\";\nimport Failed from \"./Failed.jsx\";\nimport useAuth from \"../hooks/useAuth.jsx\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { ConflictModal } from \"../components/Modals/Conflict/ConflictModal.jsx\";\nimport ProgressBar from \"../components/ProgressBar.jsx\";\nimport { CLIENT_ID } from \"../utils/Constants.jsx\";\nconst fuzzball = require(\"fuzzball\");\n\nexport const spotifyApi = new SpotifyWebApi({\n  clientId: CLIENT_ID,\n});\n\nconst Home = ({ code }) => {\n  const accessToken = useAuth(code);\n  const [user, setUser] = useState();\n  const { setToken, setCheckedPlaylist, songsToResolve, setSongsToResolve } =\n    useGlobalState();\n  const [cleanifyStatus, setCleanifyStatus] = useState(false);\n  const [deleteStatus, setDeleteStatus] = useState(false);\n  const [cleanifyProgress, setCleanifyProgress] = useState(false);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n    localStorage.setItem(\"api-key\", accessToken);\n  }, [accessToken, setToken]);\n\n  const {\n    isOpen: isSummaryOpen,\n    onOpen: onSummaryOpen,\n    onClose: onSummaryClose,\n  } = useDisclosure();\n\n  const {\n    isOpen: isResolveOpen,\n    onOpen: onResolveOpen,\n    onClose: onResolveClose,\n  } = useDisclosure();\n  const [isCleanifyLoading, setisCleanifyLoading] = useState();\n\n  const toast = useToast();\n\n  const {\n    checkedPlaylist,\n    playlists,\n    tracks,\n    setPlaylists,\n    setTracks,\n    cleanedPlaylistID,\n    setCleanedPlaylistID,\n  } = useGlobalState();\n\n  useEffect(() => {\n    const loadUser = async () => {\n      setUser(await getUser());\n    };\n    loadUser();\n  }, []);\n\n  const handleDelete = async () => {\n    setDeleteStatus(true);\n    setCheckedPlaylist(\n      String(Number(checkedPlaylist) - 1) >= 0\n        ? String(Number(checkedPlaylist) - 1)\n        : \"\"\n    );\n\n    await deletePlaylist(playlists.items[checkedPlaylist].id);\n    const refreshedPlaylists = await getPlaylists();\n    if (refreshedPlaylists instanceof Error) {\n      toast({\n        title: `Unable to perform action. Please try refreshing the page and log in again`,\n        position: \"top-right\",\n        status: \"error\",\n        duration: 7000,\n        isClosable: true,\n      });\n\n      return;\n    }\n    setPlaylists(refreshedPlaylists);\n    setDeleteStatus(false);\n  };\n\n  const containSameArtists = (first, second) => {\n    if (first.artists.length !== second.artists.length) return false;\n    let artistCount = first.artists.length;\n    for (let index = 0; index < artistCount; index++) {\n      if (first.artists[index].name !== second.artists[index].name) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const getAllTracks = useCallback(async () => {\n    setTracks({ items: [] });\n\n    const allTracks = [];\n    let tracks = await getTracks(playlists.items[checkedPlaylist].id);\n    if (tracks instanceof Error) {\n      toast({\n        title: `Unable to perform action. Please try refreshing the page and log in again`,\n        position: \"top-right\",\n        status: \"error\",\n        duration: 7000,\n        isClosable: true,\n      });\n      return;\n    }\n    if (!tracks) {\n      toast({\n        title: `Error fetching all tracks. Refresh and try again`,\n        position: \"top-right\",\n        status: \"error\",\n        duration: 7000,\n        isClosable: true,\n      });\n    }\n    allTracks.push(...tracks.items);\n    while (tracks && tracks.next) {\n      tracks = await getNextTracks(tracks.next);\n      if (!tracks) {\n        toast({\n          title: `Error fetching all tracks. Refresh and try again`,\n          position: \"top-right\",\n          status: \"error\",\n          duration: 7000,\n          isClosable: true,\n        });\n      }\n      if (tracks && tracks.items) {\n        allTracks.push(...tracks.items);\n      }\n    }\n    tracks = { items: allTracks };\n\n    setTracks(tracks);\n    return allTracks;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [checkedPlaylist, setTracks, toast]);\n\n  useEffect(() => {\n    if (checkedPlaylist && checkedPlaylist >= 0) {\n      getAllTracks();\n    }\n  }, [checkedPlaylist, getAllTracks]);\n\n  const handleCleanify = async () => {\n    setCleanifyStatus(true);\n\n    await getAllTracks();\n\n    const cleanTrackIDs = [];\n    const explicitTracks = [];\n\n    for (let t of tracks.items) {\n      if (!t.track) continue;\n      t && t.track && t.track.explicit\n        ? explicitTracks.push({\n            query: `${t.track.name} ${t.track.artists[0].name}`,\n            name: t.track.name,\n            artists: t.track.artists,\n            uri: t.track.uri,\n            link: t.track.external_urls.spotify,\n          })\n        : cleanTrackIDs.push(t.track.uri);\n    }\n\n    const cleanVersionTrackIDs = [];\n    const remainingExplicitSongs = [];\n    const potentiallyCleanSongs = new Map();\n\n    const total = explicitTracks.length;\n    let index = 0;\n    for (let track of explicitTracks) {\n      index++;\n      if (track.query.length === 0) continue;\n      const trackResponses = await searchForTracks(\n        track.query.trim().replaceAll(\"#\", \"\")\n      );\n      console.log(trackResponses);\n      if (!trackResponses) {\n        toast({\n          title: `Error searching for track. Refresh and try again`,\n          position: \"top-right\",\n          status: \"error\",\n          duration: 7000,\n          isClosable: true,\n        });\n      }\n      if (trackResponses instanceof Error) {\n        toast({\n          title: `Unable to perform action. Please try refreshing the page and log in again`,\n          position: \"top-right\",\n          status: \"error\",\n          duration: 7000,\n          isClosable: true,\n        });\n        return;\n      }\n      let isClean = false;\n      if (trackResponses && trackResponses.tracks.items.length > 0) {\n        for (let t of trackResponses.tracks.items) {\n          if (t && t.name && !t.explicit && containSameArtists(t, track)) {\n            if (fuzzball.distance(t.name, track.name) === 0) {\n              cleanVersionTrackIDs.push(t.uri);\n              isClean = true;\n              break;\n            } else if (fuzzball.ratio(t.name, track.name) > 1) {\n              if (potentiallyCleanSongs.has(track.name)) {\n                potentiallyCleanSongs.get(track.name).push({\n                  name: t.name,\n                  link: t.external_urls.spotify,\n                  uri: t.uri,\n                  original_track_uri: track.uri,\n                  original_track_link: track.link,\n                });\n              } else {\n                potentiallyCleanSongs.set(track.name, [\n                  {\n                    name: t.name,\n                    link: t.external_urls.spotify,\n                    uri: t.uri,\n                    original_track_uri: track.uri,\n                    original_track_link: track.link,\n                  },\n                ]);\n              }\n            }\n          }\n        }\n        if (!isClean) {\n          remainingExplicitSongs.push({\n            name: track.name,\n            queryURL: `https://open.spotify.com/search/${encodeURIComponent(\n              track.query\n            )}`,\n          });\n        }\n      }\n      setCleanifyProgress((index / total) * 100);\n    }\n\n    setSongsToResolve(potentiallyCleanSongs);\n\n    const newPlaylist = await createPlaylist(\n      `${playlists.items[checkedPlaylist].name} (Cleanified)`,\n      user.id\n    );\n    setPlaylists(await getPlaylists());\n\n    let allCleanSongs = [...cleanTrackIDs, ...cleanVersionTrackIDs];\n    let remainingSongs = [];\n\n    while (allCleanSongs.length > 0) {\n      remainingSongs = allCleanSongs.splice(0, 100);\n      if (remainingSongs.length > 0) {\n        await addTracksToPlaylist(newPlaylist.id, remainingSongs);\n      }\n    }\n\n    setisCleanifyLoading({\n      numOriginalClean: cleanTrackIDs.length,\n      numCleanFound: cleanVersionTrackIDs.length,\n      numStillMissing: remainingExplicitSongs,\n    });\n\n    setCleanedPlaylistID(newPlaylist.id);\n    setCleanifyStatus(false);\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" p={[0, 1, 15, 15]}>\n      <VStack>\n        <Heading>Cleanify</Heading>\n\n        {user && <Text fontSize=\"lg\">{`Username: ${user.display_name}`}</Text>}\n        {!user && (\n          <>\n            <Failed />\n          </>\n        )}\n\n        {user && (\n          <SimpleGrid spacing={[1, 3, 5, 5]} columns={[1, 1, 2, 2]}>\n            <Button\n              isLoading={cleanifyStatus}\n              colorScheme=\"green\"\n              onClick={handleCleanify}\n              loadingText=\"Cleanifying\"\n              isDisabled={!checkedPlaylist}\n            >\n              Cleanify Playlist\n            </Button>\n            <Button\n              colorScheme=\"red\"\n              onClick={handleDelete}\n              isLoading={deleteStatus}\n              loadingText=\"Deleting\"\n              isDisabled={!checkedPlaylist}\n            >\n              Delete Playlist\n            </Button>\n            {cleanedPlaylistID && (\n              <Button isDisabled={!cleanedPlaylistID} onClick={onSummaryOpen}>\n                View Summary\n              </Button>\n            )}\n            {cleanedPlaylistID && songsToResolve.size !== 0 && (\n              <Button\n                isDisabled={songsToResolve.size === 0}\n                colorScheme=\"yellow\"\n                onClick={onResolveOpen}\n              >\n                Resolve Conflicts\n              </Button>\n            )}\n          </SimpleGrid>\n        )}\n        {isCleanifyLoading && (\n          <SummaryModal\n            isOpen={isSummaryOpen}\n            onClose={onSummaryClose}\n            details={isCleanifyLoading}\n          />\n        )}\n        {songsToResolve && (\n          <ConflictModal\n            isOpen={isResolveOpen}\n            onClose={onResolveClose}\n            details={songsToResolve}\n          />\n        )}\n        <SimpleGrid columns={[1, 1, 1, 3]} alignItems=\"center\" spacing={5}>\n          <Container\n            mt={[20, 1, 1, 1]}\n            mb={[20, 1, 1, 1]}\n            h=\"700px\"\n            width={[\"200px\", \"300px\", \"400px\"]}\n          >\n            {user && <PlaylistTable />}\n          </Container>\n          <Container\n            mt={[\"150px\", 1, 1, 1]}\n            mb={[20, 1, 1, 1]}\n            h=\"700px\"\n            width={[\"200px\", \"300px\", \"400px\"]}\n          >\n            {checkedPlaylist && (\n              <SongTable\n                title={`Before Cleanified ${\n                  tracks ? `(${tracks.items.length} songs)` : \"\"\n                }`}\n              />\n            )}\n          </Container>\n          <Container\n            mt={[0, 1, 1, 1]}\n            mb={[20, 1, 1, 1]}\n            h=\"700px\"\n            width={[\"200px\", \"300px\", \"400px\"]}\n          >\n            {checkedPlaylist && cleanedPlaylistID ? (\n              <CleanSongTable\n                title={`After Cleanified (${\n                  isCleanifyLoading.numCleanFound +\n                  isCleanifyLoading.numOriginalClean\n                } songs)`}\n              />\n            ) : (\n              cleanifyProgress &&\n              cleanifyProgress !== 100 && (\n                <Center h=\"700px\" flexDir=\"column\">\n                  <ProgressBar value={cleanifyProgress} />\n                </Center>\n              )\n            )}\n          </Container>\n        </SimpleGrid>\n      </VStack>\n    </Flex>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
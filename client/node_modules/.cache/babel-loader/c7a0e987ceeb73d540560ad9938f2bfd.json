{"ast":null,"code":"var _jsxFileName = \"/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/ConflictModal.jsx\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, UnorderedList } from \"@chakra-ui/react\";\nimport ConflictAccordion from \"./ConflictAccordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConflictModal = _ref => {\n  let {\n    isOpen,\n    onClose,\n    details\n  } = _ref;\n  const summary = `Below, there ${details.size === 1 ? `is ${details.size} song that needs to be` : `are ${details.size} songs that need to be`}  resolved. Each song title and the potential clean versions and linked below. Click on each one to decide whether or not to include them in your playlist`;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      p: 6,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Resolve the following conflicts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          pb: 5,\n          children: details.size === 0 ? \"All conflicts have been resolved :)\" : summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), details && /*#__PURE__*/_jsxDEV(UnorderedList, {\n          mt: 4,\n          children: Array.from(details.entries()).map((entry, index) => {\n            const [key, value] = entry;\n            return /*#__PURE__*/_jsxDEV(ConflictAccordion, {\n              mainSong: key,\n              possibleSongs: value,\n              allSongs: details\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ConflictModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConflictModal\");","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/ConflictModal.jsx"],"names":["Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","UnorderedList","ConflictAccordion","ConflictModal","isOpen","onClose","details","summary","size","Array","from","entries","map","entry","index","key","value"],"mappings":";AAAA,SACEA,KADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,YAPF,EAQEC,IARF,EASEC,aATF,QAUO,kBAVP;AAWA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAiC;AAC7D,QAAMC,OAAO,GAAI,gBACfD,OAAO,CAACE,IAAR,KAAiB,CAAjB,GACK,MAAKF,OAAO,CAACE,IAAK,wBADvB,GAEK,OAAMF,OAAO,CAACE,IAAK,wBACzB,4JAJD;AAMA,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,MAAf;AAAuB,IAAA,OAAO,EAAEC,OAAhC;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,CAAC,EAAE,CAAjB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA,oBACGC,OAAO,CAACE,IAAR,KAAiB,CAAjB,GACG,qCADH,GAEGD;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGD,OAAO,iBACN,QAAC,aAAD;AAAe,UAAA,EAAE,EAAE,CAAnB;AAAA,oBACGG,KAAK,CAACC,IAAN,CAAWJ,OAAO,CAACK,OAAR,EAAX,EAA8BC,GAA9B,CAAkC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnD,kBAAM,CAACC,GAAD,EAAMC,KAAN,IAAeH,KAArB;AACA,gCACE,QAAC,iBAAD;AAEE,cAAA,QAAQ,EAAEE,GAFZ;AAGE,cAAA,aAAa,EAAEC,KAHjB;AAIE,cAAA,QAAQ,EAAEV;AAJZ,eACOQ,KADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WAVA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAyBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAvCM;KAAMX,a","sourcesContent":["import {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport ConflictAccordion from \"./ConflictAccordion\";\n\nexport const ConflictModal = ({ isOpen, onClose, details }) => {\n  const summary = `Below, there ${\n    details.size === 1\n      ? `is ${details.size} song that needs to be`\n      : `are ${details.size} songs that need to be`\n  }  resolved. Each song title and the potential clean versions and linked below. Click on each one to decide whether or not to include them in your playlist`;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent p={6}>\n        <ModalHeader>Resolve the following conflicts </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text pb={5}>\n            {details.size === 0\n              ? \"All conflicts have been resolved :)\"\n              : summary}\n          </Text>\n          {details && (\n            <UnorderedList mt={4}>\n              {Array.from(details.entries()).map((entry, index) => {\n                const [key, value] = entry;\n                return (\n                  <ConflictAccordion\n                    key={index}\n                    mainSong={key}\n                    possibleSongs={value}\n                    allSongs={details}\n                  />\n                );\n              })}\n            </UnorderedList>\n          )}\n        </ModalBody>\n        <ModalFooter />\n      </ModalContent>\n    </Modal>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
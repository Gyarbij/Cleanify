{"ast":null,"code":"var _jsxFileName = \"/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/ConflictAccordion.jsx\",\n    _s = $RefreshSig$();\n\nimport { MinusIcon } from \"@chakra-ui/icons\";\nimport { Accordion, AccordionItem, AccordionButton, AccordionPanel, AccordionIcon, Box, Link, UnorderedList, Tooltip, IconButton, Flex } from \"@chakra-ui/react\";\nimport { useGlobalState } from \"../../../contexts/GlobalContext\";\nimport SongListItem from \"./SongListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConflictAccordion = _ref => {\n  _s();\n\n  let {\n    mainSong,\n    possibleSongs,\n    allSongs\n  } = _ref;\n  const {\n    setSongsToResolve,\n    songsToResolve\n  } = useGlobalState();\n\n  const handleRemoveItemFromList = () => {\n    const remaining = new Map();\n\n    for (let [key, value] of songsToResolve) {\n      if (key !== mainSong) remaining.set(key, value);\n    }\n\n    setSongsToResolve(remaining); // TODO: Update summary view with changes\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultIndex: [0],\n    allowMultiple: true,\n    children: /*#__PURE__*/_jsxDEV(AccordionItem, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexDir: \"row\",\n        justify: \"center\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(AccordionButton, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            textAlign: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              isExternal: true,\n              fontSize: \"xl\",\n              fontWeight: \"bold\",\n              href: possibleSongs[0] && possibleSongs[0].original_track_link,\n              children: mainSong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          hasArrow: true,\n          label: \"Do not add this song to playlist (None below match)\",\n          fontSize: \"md\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            ml: 3,\n            minW: \"25px\",\n            w: \"25px\",\n            h: \"25px\",\n            icon: /*#__PURE__*/_jsxDEV(MinusIcon, {\n              h: 3,\n              w: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this),\n            colorScheme: \"red\",\n            onClick: handleRemoveItemFromList,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionPanel, {\n        pb: 4,\n        children: /*#__PURE__*/_jsxDEV(UnorderedList, {\n          mb: 5,\n          children: possibleSongs && possibleSongs.map((item, index) => /*#__PURE__*/_jsxDEV(SongListItem, {\n            allSongs: allSongs,\n            songTitle: item.name,\n            songLink: item.link,\n            songURI: item.uri,\n            ogSongTitle: mainSong\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConflictAccordion, \"F3qC8phsPEMjtE2mGmVtz4kbsd8=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = ConflictAccordion;\nexport default ConflictAccordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConflictAccordion\");","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/components/Modals/Conflict/ConflictAccordion.jsx"],"names":["MinusIcon","Accordion","AccordionItem","AccordionButton","AccordionPanel","AccordionIcon","Box","Link","UnorderedList","Tooltip","IconButton","Flex","useGlobalState","SongListItem","ConflictAccordion","mainSong","possibleSongs","allSongs","setSongsToResolve","songsToResolve","handleRemoveItemFromList","remaining","Map","key","value","set","original_track_link","map","item","index","name","link","uri"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,GANF,EAOEC,IAPF,EAQEC,aARF,EASEC,OATF,EAUEC,UAVF,EAWEC,IAXF,QAYO,kBAZP;AAaA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,GAA0C;AAC1E,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCP,cAAc,EAA5D;;AAEA,QAAMQ,wBAAwB,GAAG,MAAM;AACrC,UAAMC,SAAS,GAAG,IAAIC,GAAJ,EAAlB;;AACA,SAAK,IAAI,CAACC,GAAD,EAAMC,KAAN,CAAT,IAAyBL,cAAzB,EAAyC;AACvC,UAAII,GAAG,KAAKR,QAAZ,EAAsBM,SAAS,CAACI,GAAV,CAAcF,GAAd,EAAmBC,KAAnB;AACvB;;AACDN,IAAAA,iBAAiB,CAACG,SAAD,CAAjB,CALqC,CAMrC;AACD,GAPD;;AAQA,sBACE,QAAC,SAAD;AAAW,IAAA,YAAY,EAAE,CAAC,CAAD,CAAzB;AAA8B,IAAA,aAAa,MAA3C;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,KAAd;AAAoB,QAAA,OAAO,EAAC,QAA5B;AAAqC,QAAA,KAAK,EAAC,QAA3C;AAAA,gCACE,QAAC,eAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,GAAV;AAAc,YAAA,SAAS,EAAC,MAAxB;AAAA,mCACE,QAAC,IAAD;AACE,cAAA,UAAU,MADZ;AAEE,cAAA,QAAQ,EAAC,IAFX;AAGE,cAAA,UAAU,EAAC,MAHb;AAIE,cAAA,IAAI,EAAEL,aAAa,CAAC,CAAD,CAAb,IAAoBA,aAAa,CAAC,CAAD,CAAb,CAAiBU,mBAJ7C;AAAA,wBAMGX;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,OAAD;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,KAAK,EAAC,qDAFR;AAGE,UAAA,QAAQ,EAAC,IAHX;AAAA,iCAKE,QAAC,UAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,CAAC,EAAC,MAHJ;AAIE,YAAA,CAAC,EAAC,MAJJ;AAKE,YAAA,IAAI,eAAE,QAAC,SAAD;AAAW,cAAA,CAAC,EAAE,CAAd;AAAiB,cAAA,CAAC,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,oBALR;AAME,YAAA,WAAW,EAAC,KANd;AAOE,YAAA,OAAO,EAAEK,wBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkCE,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAE,CAApB;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,EAAE,EAAE,CAAnB;AAAA,oBACGJ,aAAa,IACZA,aAAa,CAACW,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,YAAD;AACE,YAAA,QAAQ,EAAEZ,QADZ;AAGE,YAAA,SAAS,EAAEW,IAAI,CAACE,IAHlB;AAIE,YAAA,QAAQ,EAAEF,IAAI,CAACG,IAJjB;AAKE,YAAA,OAAO,EAAEH,IAAI,CAACI,GALhB;AAME,YAAA,WAAW,EAAEjB;AANf,aAEOc,KAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAjEM;;GAAMf,iB;UACmCF,c;;;KADnCE,iB;AAkEb,eAAeA,iBAAf","sourcesContent":["import { MinusIcon } from \"@chakra-ui/icons\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Box,\n  Link,\n  UnorderedList,\n  Tooltip,\n  IconButton,\n  Flex,\n} from \"@chakra-ui/react\";\nimport { useGlobalState } from \"../../../contexts/GlobalContext\";\nimport SongListItem from \"./SongListItem\";\n\nexport const ConflictAccordion = ({ mainSong, possibleSongs, allSongs }) => {\n  const { setSongsToResolve, songsToResolve } = useGlobalState();\n\n  const handleRemoveItemFromList = () => {\n    const remaining = new Map();\n    for (let [key, value] of songsToResolve) {\n      if (key !== mainSong) remaining.set(key, value);\n    }\n    setSongsToResolve(remaining);\n    // TODO: Update summary view with changes\n  };\n  return (\n    <Accordion defaultIndex={[0]} allowMultiple>\n      <AccordionItem>\n        <Flex flexDir=\"row\" justify=\"center\" align=\"center\">\n          <AccordionButton>\n            <Box flex=\"1\" textAlign=\"left\">\n              <Link\n                isExternal\n                fontSize=\"xl\"\n                fontWeight=\"bold\"\n                href={possibleSongs[0] && possibleSongs[0].original_track_link}\n              >\n                {mainSong}\n              </Link>\n            </Box>\n\n            <AccordionIcon />\n          </AccordionButton>\n          <Tooltip\n            hasArrow\n            label=\"Do not add this song to playlist (None below match)\"\n            fontSize=\"md\"\n          >\n            <IconButton\n              ml={3}\n              minW=\"25px\"\n              w=\"25px\"\n              h=\"25px\"\n              icon={<MinusIcon h={3} w={3} />}\n              colorScheme=\"red\"\n              onClick={handleRemoveItemFromList}\n            >\n              -\n            </IconButton>\n          </Tooltip>\n        </Flex>\n        <AccordionPanel pb={4}>\n          <UnorderedList mb={5}>\n            {possibleSongs &&\n              possibleSongs.map((item, index) => (\n                <SongListItem\n                  allSongs={allSongs}\n                  key={index}\n                  songTitle={item.name}\n                  songLink={item.link}\n                  songURI={item.uri}\n                  ogSongTitle={mainSong}\n                />\n              ))}\n          </UnorderedList>\n        </AccordionPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n};\nexport default ConflictAccordion;\n"]},"metadata":{},"sourceType":"module"}
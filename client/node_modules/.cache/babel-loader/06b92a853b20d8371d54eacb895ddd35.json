{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useGlobalState } from \"../contexts/GlobalContext\";\nimport { spotifyApi } from \"../pages/Home\";\nexport default function useAuth(code) {\n  _s();\n\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  const {\n    setToken\n  } = useGlobalState();\n  console.log(`backend url: [${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login]`);\n  useEffect(() => {\n    axios.post(`${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login`, {\n      code: code\n    }).then(res => {\n      console.log(\"Response\", res);\n      setAccessToken(res.data.accessToken);\n      setToken(res.data.accessToken);\n      localStorage.setItem(\"api-key\", res.data.accessToken);\n      setRefreshToken(res.data.refreshToken);\n      setExpiresIn(res.data.expiresIn);\n      window.history.pushState({}, null, \"/\");\n    }).catch(err => {\n      console.log(`Error posting to ${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login`, \"code is\", code, \"error is\", err);\n      window.location = \"/\";\n    });\n  }, [code, setToken]);\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios.post(`${process.env.CLEANIFY_BACKEND_URL}/refresh`, {\n        refreshToken\n      }).then(res => {\n        setAccessToken(res.data.accessToken);\n        setToken(res.data.accessToken);\n        spotifyApi.setAccessToken(res.data.accessToken);\n        localStorage.setItem(\"api-key\", res.data.accessToken);\n        setExpiresIn(res.data.expiresIn);\n      }).catch(() => {\n        window.location = \"/\";\n      });\n    }, (expiresIn - 60) * 1000);\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn, setToken]);\n  return accessToken;\n}\n\n_s(useAuth, \"HHGyg/kBZw+V5XKSTLFlu76fY38=\", false, function () {\n  return [useGlobalState];\n});","map":{"version":3,"sources":["/Users/armanrafati/Documents/Cleanify/client/src/hooks/useAuth.jsx"],"names":["useState","useEffect","axios","useGlobalState","spotifyApi","useAuth","code","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","setToken","console","log","process","env","REACT_APP_CLEANIFY_BACKEND_URL","post","then","res","data","localStorage","setItem","window","history","pushState","catch","err","location","interval","setInterval","CLEANIFY_BACKEND_URL","clearInterval"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useGlobalState } from \"../contexts/GlobalContext\";\nimport { spotifyApi } from \"../pages/Home\";\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  const { setToken } = useGlobalState();\n\n  console.log(\n    `backend url: [${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login]`\n  );\n  useEffect(() => {\n    axios\n      .post(`${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login`, {\n        code: code,\n      })\n      .then((res) => {\n        console.log(\"Response\", res);\n        setAccessToken(res.data.accessToken);\n        setToken(res.data.accessToken);\n        localStorage.setItem(\"api-key\", res.data.accessToken);\n\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        window.history.pushState({}, null, \"/\");\n      })\n      .catch((err) => {\n        console.log(\n          `Error posting to ${process.env.REACT_APP_CLEANIFY_BACKEND_URL}/login`,\n          \"code is\",\n          code,\n          \"error is\",\n          err\n        );\n        window.location = \"/\";\n      });\n  }, [code, setToken]);\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios\n        .post(`${process.env.CLEANIFY_BACKEND_URL}/refresh`, {\n          refreshToken,\n        })\n        .then((res) => {\n          setAccessToken(res.data.accessToken);\n          setToken(res.data.accessToken);\n          spotifyApi.setAccessToken(res.data.accessToken);\n          localStorage.setItem(\"api-key\", res.data.accessToken);\n          setExpiresIn(res.data.expiresIn);\n        })\n        .catch(() => {\n          window.location = \"/\";\n        });\n    }, (expiresIn - 60) * 1000);\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn, setToken]);\n\n  return accessToken;\n}\n"]},"metadata":{},"sourceType":"module"}